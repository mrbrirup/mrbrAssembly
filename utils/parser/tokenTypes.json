{
    "initialBlocks": {
        "/*": "blockCommentStart",
        "\"": "doubleQuoteText",
        "'": "singleQuoteText",
        "//": "singleLineComment",
        "`": "tickQuoteText",
        "=": "equals",
        ">": "greaterThan",
        "<": "lessThan",
        "|": "pipe",
        "^": "carat",
        "&": "ampersand",
        "+": "add",
        "-": "substract",
        "*": "multiply",
        "/": "divide",
        "%": "modulos",
        ";": "semiColon",
        ",": "comma",
        "?": "question",
        ":": "colon",
        "!": "exclamation",
        "~": "tilde",
        ".": "dot"    
    },
    "identifier":"^([a-z][a-z0-9_$]*)$"    ,
    "whitespace": {
        "\r\n":"carriageReturnNewLine",
        " ":"space",
        "\t":"tab",
        "\n":"newline",
        "\r":"carriageReturn",
        "\f":"formFeed"
    },
    "blocks": {
        "{":"openBrace",
        "}":"closeBrace",
        "[":"openBracket",
        "]":"closeBracket",
        "(":"openParenthesis",
        ")":"closeParenthesis"
    },
    "keywords": [
        "abstract",
        "apply",
        "arguments",
        "await",
        "boolean",
        "break",
        "byte",
        "call",
        "case",
        "catch",
        "char",
        "class",
        "constructor",
        "const",
        "continue",
        "debugger",
        "default",
        "delete",
        "do",
        "double",
        "else",
        "enum",
        "eval",
        "export",
        "extends",
        "false",
        "final",
        "finally",
        "float",
        "for",
        "forEach",
        "function",
        "goto",
        "if",
        "implements",
        "import",
        "in",
        "instanceof",
        "int",
        "interface",
        "let",
        "long",
        "native",
        "new",
        "null",
        "package",
        "private",
        "protected",
        "public",
        "return",
        "short",
        "static",
        "super",
        "switch",
        "synchronized",
        "this",
        "throw",
        "throws",
        "transient",
        "true",
        "try",
        "typeof",
        "var",
        "void",
        "volatile",
        "while",
        "with",
        "yield"
    ],
    "objectMethods": [
        "apply",
        "call",
        "forEach"
    ],
    "operators": {
        ">>>=": "assignUnsignedRightShift",
        "=>": "function",
        ">>=": "assignRightShift",
        "<<=": "assignLeftShift",
        "|=": "assignBitwiseOr",
        "^=": "assignBitwiseXor",
        "&=": "assignBitwiseAnd",
        "+=": "assignAdd",
        "-=": "assignSubtract",
        "*=": "assignMultiply",
        "/=": "assignDivide",
        "%=": "assignModulus",
        ";": "semicolon",
        ",": "comma",
        "?": "quation",
        ":": "colon",
        "||": "or",
        "&&": "and",
        "|": "bitwiseOr",
        "^": "bitwiseXor",
        "&": "bitwiseAnd",
        "===": "strictEquals",
        "==": "equals",
        "=": "assign",
        "!==": "strictNotEquals",
        "!=": "notEquals",
        "<<": "leftShift",
        "<=": "lessThanEquals",
        "<": "lessThan",
        ">>>": "unsignRightShift",
        ">>": "rightShift",
        ">=": "greaterThanEquals",
        ">": "greaterThan",
        "++": "increment",
        "--": "decrement",
        "+": "addition",
        "-": "subtract",
        "*": "multiple",
        "/": "divide",
        "%": "modulus",
        "!": "not",
        "~": "bitwiseNot",
        ".": "dot",
        "...": "spread"
    }
}